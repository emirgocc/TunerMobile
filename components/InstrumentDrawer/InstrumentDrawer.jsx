import React, { useCallback } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';

// Desteklenen enstrÃ¼manlar listesi
const instruments = [
  { 
    id: 'guitar', 
    name: 'Gitar', 
    emoji: 'ðŸŽ¸',
    active: true // VarsayÄ±lan aktif enstrÃ¼man
  },
  { 
    id: 'violin', 
    name: 'Keman', 
    emoji: 'ðŸŽ»',
    active: false
  },
  { 
    id: 'ukulele', 
    name: 'Ukulele', 
    emoji: 'ðŸª•',
    active: false
  },
];

/**
 * EnstrÃ¼man seÃ§imi iÃ§in Ã§ekmece menÃ¼ bileÅŸeni
 * @param {string} selectedInstrument - SeÃ§ili enstrÃ¼man ID'si
 * @param {function} onSelectInstrument - EnstrÃ¼man seÃ§ildiÄŸinde Ã§aÄŸrÄ±lan fonksiyon
 * @param {function} onClose - Ã‡ekmece kapatÄ±lÄ±rken Ã§aÄŸrÄ±lan fonksiyon
 */
const InstrumentDrawer = ({ selectedInstrument, onSelectInstrument, onClose }) => {
  
  const handleSelectInstrument = useCallback((instrumentId) => {
    // Reanimated ile smooth, timeout gereksiz
    onSelectInstrument(instrumentId);
  }, [onSelectInstrument]);

  return (
    <View style={styles.container}>
      {/* Ã‡ekmece arka planÄ± - mevcut tema ile uyumlu gradient */}
      <LinearGradient
        colors={['rgba(44,49,54,0.85)', 'rgba(35,38,43,0.85)']}
        style={styles.drawerBackground}
        start={{ x: 0, y: 0 }}
        end={{ x: 0, y: 1 }}
      >
        {/* BaÅŸlÄ±k */}
        <View style={styles.header}>
          <Text style={styles.headerTitle}>EnstrÃ¼man SeÃ§</Text>
        </View>

        {/* EnstrÃ¼man listesi */}
        <View style={styles.instrumentsList}>
          {instruments.map((instrument) => {
            const isSelected = selectedInstrument === instrument.id;
            
            return (
              <TouchableOpacity
                key={instrument.id}
                style={[
                  styles.instrumentItem,
                  isSelected && styles.instrumentItemSelected
                ]}
                onPress={() => handleSelectInstrument(instrument.id)}
                activeOpacity={0.7}
              >
                {/* SeÃ§ili enstrÃ¼man iÃ§in gradient arka plan - React 18 uyumlu */}
                <LinearGradient
                  colors={isSelected 
                    ? ['rgba(234,80,111,0.15)', 'rgba(234,80,111,0.05)']
                    : ['transparent', 'transparent']
                  }
                  style={StyleSheet.absoluteFill}
                  start={{ x: 0, y: 0 }}
                  end={{ x: 1, y: 0 }}
                />
                
                {/* EnstrÃ¼man emoji'si */}
                <Text style={styles.instrumentEmoji}>
                  {instrument.emoji}
                </Text>
                
                {/* EnstrÃ¼man adÄ± */}
                <Text style={[
                  styles.instrumentName,
                  isSelected && styles.instrumentNameSelected
                ]}>
                  {instrument.name}
                </Text>
                
                {/* SeÃ§ili iÅŸareti */}
                {isSelected && (
                  <View style={styles.selectedIndicator}>
                    <Text style={styles.selectedCheckmark}>âœ“</Text>
                  </View>
                )}
              </TouchableOpacity>
            );
          })}
        </View>

        {/* Footer bilgi metni */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            Åžu anda sadece Gitar modu aktif
          </Text>
          <Text style={styles.footerSubtext}>
            DiÄŸer enstrÃ¼manlar yakÄ±nda gelecek
          </Text>
        </View>
      </LinearGradient>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    width: '100%',
  },
  drawerBackground: {
    flex: 1,
    paddingTop: 50,
    paddingHorizontal: 16, // Geri dÃ¼ÅŸÃ¼rÃ¼ldÃ¼: 18 â†’ 16
    paddingBottom: 20,
  },
  header: {
    marginBottom: 20,
    paddingBottom: 12,
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(255,255,255,0.1)',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#EA506F',
    textAlign: 'center',
    letterSpacing: 0.5,
    fontFamily: Platform.OS === 'android' ? 'Roboto' : undefined,
  },
  instrumentsList: {
    flex: 1,
  },
  instrumentItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 14, // ArtÄ±r: 12 â†’ 14 (checkmark yakÄ±n olduÄŸu iÃ§in)
    paddingHorizontal: 16, // ArtÄ±r: 14 â†’ 16 (daha rahat)
    marginVertical: 3,
    borderRadius: 10,
    backgroundColor: 'rgba(255,255,255,0.02)',
    borderWidth: 1,
    borderColor: 'rgba(255,255,255,0.05)',
    position: 'relative',
    overflow: 'hidden',
  },
  instrumentItemSelected: {
    borderColor: 'rgba(234,80,111,0.3)',
    backgroundColor: 'rgba(234,80,111,0.05)',
  },
  instrumentEmoji: {
    fontSize: 24,
    marginRight: 14, // ArtÄ±r: 12 â†’ 14 (checkmark yakÄ±n olduÄŸu iÃ§in)
    width: 34, // ArtÄ±r: 32 â†’ 34 (daha dengeli)
    textAlign: 'center',
  },
  instrumentName: {
    fontSize: 16,
    color: '#bfc2c7',
    fontWeight: '500',
    flex: 1,
    letterSpacing: 0.3,
    fontFamily: Platform.OS === 'android' ? 'Roboto' : undefined,
  },
  instrumentNameSelected: {
    color: '#EA506F',
    fontWeight: 'bold',
  },
  selectedIndicator: {
    width: 20, // Biraz kÃ¼Ã§Ã¼lt: 22 â†’ 20
    height: 20, // Biraz kÃ¼Ã§Ã¼lt: 22 â†’ 20
    borderRadius: 10, // Biraz kÃ¼Ã§Ã¼lt: 11 â†’ 10
    backgroundColor: '#EA506F',
    justifyContent: 'center',
    alignItems: 'center',
    // marginLeft kaldÄ±rÄ±ldÄ± - checkmark artÄ±k yakÄ±n
  },
  selectedCheckmark: {
    color: 'white',
    fontSize: 12,
    fontWeight: 'bold',
  },
  footer: {
    marginTop: 16,
    paddingTop: 16,
    borderTopWidth: 1,
    borderTopColor: 'rgba(255,255,255,0.1)',
    alignItems: 'center',
  },
  footerText: {
    fontSize: 13, // KÃ¼Ã§Ã¼ltÃ¼ldÃ¼: 14 â†’ 13
    color: '#888',
    textAlign: 'center',
    marginBottom: 3, // KÃ¼Ã§Ã¼ltÃ¼ldÃ¼: 4 â†’ 3
    fontFamily: Platform.OS === 'android' ? 'Roboto' : undefined,
  },
  footerSubtext: {
    fontSize: 11, // KÃ¼Ã§Ã¼ltÃ¼ldÃ¼: 12 â†’ 11
    color: '#666',
    textAlign: 'center',
    fontStyle: 'italic',
    fontFamily: Platform.OS === 'android' ? 'Roboto' : undefined,
  },
});

export default InstrumentDrawer;